// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lib/ProtocolBuffers/arangodb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ArangoMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArangoMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArangoKeyValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArangoKeyValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArangoBlobMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArangoBlobMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ArangoMessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ArangoMessageContentType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto() {
  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lib/ProtocolBuffers/arangodb.proto");
  GOOGLE_CHECK(file != NULL);
  ArangoMessage_descriptor_ = file->message_type(0);
  static const int ArangoMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoMessage, blob_),
  };
  ArangoMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArangoMessage_descriptor_,
      ArangoMessage::default_instance_,
      ArangoMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArangoMessage));
  ArangoKeyValue_descriptor_ = file->message_type(1);
  static const int ArangoKeyValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoKeyValue, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoKeyValue, value_),
  };
  ArangoKeyValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArangoKeyValue_descriptor_,
      ArangoKeyValue::default_instance_,
      ArangoKeyValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoKeyValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoKeyValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArangoKeyValue));
  ArangoBlobMessage_descriptor_ = file->message_type(2);
  static const int ArangoBlobMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, contenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, content_),
  };
  ArangoBlobMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArangoBlobMessage_descriptor_,
      ArangoBlobMessage::default_instance_,
      ArangoBlobMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArangoBlobMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArangoBlobMessage));
  ArangoMessageType_descriptor_ = file->enum_type(0);
  ArangoMessageContentType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArangoMessage_descriptor_, &ArangoMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArangoKeyValue_descriptor_, &ArangoKeyValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArangoBlobMessage_descriptor_, &ArangoBlobMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto() {
  delete ArangoMessage::default_instance_;
  delete ArangoMessage_reflection_;
  delete ArangoKeyValue::default_instance_;
  delete ArangoKeyValue_reflection_;
  delete ArangoBlobMessage::default_instance_;
  delete ArangoBlobMessage_reflection_;
}

void protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"lib/ProtocolBuffers/arangodb.proto\"S\n\r"
    "ArangoMessage\022 \n\004type\030\001 \002(\0162\022.ArangoMess"
    "ageType\022 \n\004blob\030\002 \001(\0132\022.ArangoBlobMessag"
    "e\",\n\016ArangoKeyValue\022\013\n\003key\030\001 \002(\t\022\r\n\005valu"
    "e\030\002 \002(\t\"\250\001\n\021ArangoBlobMessage\022\013\n\003url\030\001 \002"
    "(\t\022#\n\nparameters\030\002 \003(\0132\017.ArangoKeyValue\022"
    " \n\007headers\030\003 \003(\0132\017.ArangoKeyValue\022.\n\013con"
    "tentType\030\004 \002(\0162\031.ArangoMessageContentTyp"
    "e\022\017\n\007content\030\005 \001(\t*!\n\021ArangoMessageType\022"
    "\014\n\010BLOB_MSG\020\001*N\n\030ArangoMessageContentTyp"
    "e\022\016\n\nNO_CONTENT\020\000\022\020\n\014TEXT_CONTENT\020\001\022\020\n\014J"
    "SON_CONTENT\020\002", 453);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lib/ProtocolBuffers/arangodb.proto", &protobuf_RegisterTypes);
  ArangoMessage::default_instance_ = new ArangoMessage();
  ArangoKeyValue::default_instance_ = new ArangoKeyValue();
  ArangoBlobMessage::default_instance_ = new ArangoBlobMessage();
  ArangoMessage::default_instance_->InitAsDefaultInstance();
  ArangoKeyValue::default_instance_->InitAsDefaultInstance();
  ArangoBlobMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lib_2fProtocolBuffers_2farangodb_2eproto {
  StaticDescriptorInitializer_lib_2fProtocolBuffers_2farangodb_2eproto() {
    protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  }
} static_descriptor_initializer_lib_2fProtocolBuffers_2farangodb_2eproto_;

const ::google::protobuf::EnumDescriptor* ArangoMessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArangoMessageType_descriptor_;
}
bool ArangoMessageType_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ArangoMessageContentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArangoMessageContentType_descriptor_;
}
bool ArangoMessageContentType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ArangoMessage::kTypeFieldNumber;
const int ArangoMessage::kBlobFieldNumber;
#endif  // !_MSC_VER

ArangoMessage::ArangoMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArangoMessage::InitAsDefaultInstance() {
  blob_ = const_cast< ::ArangoBlobMessage*>(&::ArangoBlobMessage::default_instance());
}

ArangoMessage::ArangoMessage(const ArangoMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArangoMessage::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  blob_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArangoMessage::~ArangoMessage() {
  SharedDtor();
}

void ArangoMessage::SharedDtor() {
  if (this != default_instance_) {
    delete blob_;
  }
}

void ArangoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArangoMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArangoMessage_descriptor_;
}

const ArangoMessage& ArangoMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

ArangoMessage* ArangoMessage::default_instance_ = NULL;

ArangoMessage* ArangoMessage::New() const {
  return new ArangoMessage;
}

void ArangoMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_blob()) {
      if (blob_ != NULL) blob_->::ArangoBlobMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArangoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ArangoMessageType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (ArangoMessageType_IsValid(value)) {
            set_type(static_cast< ArangoMessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blob;
        break;
      }
      
      // optional .ArangoBlobMessage blob = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blob:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blob()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArangoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ArangoMessageType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional .ArangoBlobMessage blob = 2;
  if (has_blob()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blob(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArangoMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ArangoMessageType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional .ArangoBlobMessage blob = 2;
  if (has_blob()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->blob(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArangoMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ArangoMessageType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional .ArangoBlobMessage blob = 2;
    if (has_blob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blob());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArangoMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArangoMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArangoMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArangoMessage::MergeFrom(const ArangoMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_blob()) {
      mutable_blob()->::ArangoBlobMessage::MergeFrom(from.blob());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArangoMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArangoMessage::CopyFrom(const ArangoMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArangoMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_blob()) {
    if (!this->blob().IsInitialized()) return false;
  }
  return true;
}

void ArangoMessage::Swap(ArangoMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(blob_, other->blob_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArangoMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArangoMessage_descriptor_;
  metadata.reflection = ArangoMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ArangoKeyValue::kKeyFieldNumber;
const int ArangoKeyValue::kValueFieldNumber;
#endif  // !_MSC_VER

ArangoKeyValue::ArangoKeyValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArangoKeyValue::InitAsDefaultInstance() {
}

ArangoKeyValue::ArangoKeyValue(const ArangoKeyValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArangoKeyValue::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArangoKeyValue::~ArangoKeyValue() {
  SharedDtor();
}

void ArangoKeyValue::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void ArangoKeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArangoKeyValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArangoKeyValue_descriptor_;
}

const ArangoKeyValue& ArangoKeyValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

ArangoKeyValue* ArangoKeyValue::default_instance_ = NULL;

ArangoKeyValue* ArangoKeyValue::New() const {
  return new ArangoKeyValue;
}

void ArangoKeyValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArangoKeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArangoKeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(), output);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArangoKeyValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArangoKeyValue::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }
    
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArangoKeyValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArangoKeyValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArangoKeyValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArangoKeyValue::MergeFrom(const ArangoKeyValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArangoKeyValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArangoKeyValue::CopyFrom(const ArangoKeyValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArangoKeyValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ArangoKeyValue::Swap(ArangoKeyValue* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArangoKeyValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArangoKeyValue_descriptor_;
  metadata.reflection = ArangoKeyValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ArangoBlobMessage::kUrlFieldNumber;
const int ArangoBlobMessage::kParametersFieldNumber;
const int ArangoBlobMessage::kHeadersFieldNumber;
const int ArangoBlobMessage::kContentTypeFieldNumber;
const int ArangoBlobMessage::kContentFieldNumber;
#endif  // !_MSC_VER

ArangoBlobMessage::ArangoBlobMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArangoBlobMessage::InitAsDefaultInstance() {
}

ArangoBlobMessage::ArangoBlobMessage(const ArangoBlobMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArangoBlobMessage::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  contenttype_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArangoBlobMessage::~ArangoBlobMessage() {
  SharedDtor();
}

void ArangoBlobMessage::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void ArangoBlobMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArangoBlobMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArangoBlobMessage_descriptor_;
}

const ArangoBlobMessage& ArangoBlobMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

ArangoBlobMessage* ArangoBlobMessage::default_instance_ = NULL;

ArangoBlobMessage* ArangoBlobMessage::New() const {
  return new ArangoBlobMessage;
}

void ArangoBlobMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    contenttype_ = 0;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  parameters_.Clear();
  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArangoBlobMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        break;
      }
      
      // repeated .ArangoKeyValue parameters = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        if (input->ExpectTag(26)) goto parse_headers;
        break;
      }
      
      // repeated .ArangoKeyValue headers = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_headers;
        if (input->ExpectTag(32)) goto parse_contentType;
        break;
      }
      
      // required .ArangoMessageContentType contentType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_contentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (ArangoMessageContentType_IsValid(value)) {
            set_contenttype(static_cast< ArangoMessageContentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }
      
      // optional string content = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArangoBlobMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }
  
  // repeated .ArangoKeyValue parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parameters(i), output);
  }
  
  // repeated .ArangoKeyValue headers = 3;
  for (int i = 0; i < this->headers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->headers(i), output);
  }
  
  // required .ArangoMessageContentType contentType = 4;
  if (has_contenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->contenttype(), output);
  }
  
  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->content(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArangoBlobMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }
  
  // repeated .ArangoKeyValue parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parameters(i), target);
  }
  
  // repeated .ArangoKeyValue headers = 3;
  for (int i = 0; i < this->headers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->headers(i), target);
  }
  
  // required .ArangoMessageContentType contentType = 4;
  if (has_contenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->contenttype(), target);
  }
  
  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArangoBlobMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }
    
    // required .ArangoMessageContentType contentType = 4;
    if (has_contenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->contenttype());
    }
    
    // optional string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
  }
  // repeated .ArangoKeyValue parameters = 2;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }
  
  // repeated .ArangoKeyValue headers = 3;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArangoBlobMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArangoBlobMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArangoBlobMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArangoBlobMessage::MergeFrom(const ArangoBlobMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  parameters_.MergeFrom(from.parameters_);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_contenttype()) {
      set_contenttype(from.contenttype());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArangoBlobMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArangoBlobMessage::CopyFrom(const ArangoBlobMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArangoBlobMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  
  for (int i = 0; i < parameters_size(); i++) {
    if (!this->parameters(i).IsInitialized()) return false;
  }
  for (int i = 0; i < headers_size(); i++) {
    if (!this->headers(i).IsInitialized()) return false;
  }
  return true;
}

void ArangoBlobMessage::Swap(ArangoBlobMessage* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    parameters_.Swap(&other->parameters_);
    headers_.Swap(&other->headers_);
    std::swap(contenttype_, other->contenttype_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArangoBlobMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArangoBlobMessage_descriptor_;
  metadata.reflection = ArangoBlobMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
