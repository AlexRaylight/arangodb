// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lib/ProtocolBuffers/arangodb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_ArangoKeyValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoKeyValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ArangoMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ArangoBatchMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoBatchMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ArangoBlobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoBlobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ArangoBlobResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoBlobResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ArangoErrorResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ArangoErrorResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_ArangoMessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_ArangoMessageContentType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_ArangoRequestType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto() {
  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lib/ProtocolBuffers/arangodb.proto");
  GOOGLE_CHECK(file != NULL);
  PB_ArangoKeyValue_descriptor_ = file->message_type(0);
  static const int PB_ArangoKeyValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoKeyValue, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoKeyValue, value_),
  };
  PB_ArangoKeyValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoKeyValue_descriptor_,
      PB_ArangoKeyValue::default_instance_,
      PB_ArangoKeyValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoKeyValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoKeyValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoKeyValue));
  PB_ArangoMessage_descriptor_ = file->message_type(1);
  static const int PB_ArangoMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoMessage, messages_),
  };
  PB_ArangoMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoMessage_descriptor_,
      PB_ArangoMessage::default_instance_,
      PB_ArangoMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoMessage));
  PB_ArangoBatchMessage_descriptor_ = file->message_type(2);
  static const int PB_ArangoBatchMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, blobrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, blobresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, errorresponse_),
  };
  PB_ArangoBatchMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoBatchMessage_descriptor_,
      PB_ArangoBatchMessage::default_instance_,
      PB_ArangoBatchMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBatchMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoBatchMessage));
  PB_ArangoBlobRequest_descriptor_ = file->message_type(3);
  static const int PB_ArangoBlobRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, contenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, content_),
  };
  PB_ArangoBlobRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoBlobRequest_descriptor_,
      PB_ArangoBlobRequest::default_instance_,
      PB_ArangoBlobRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoBlobRequest));
  PB_ArangoBlobResponse_descriptor_ = file->message_type(4);
  static const int PB_ArangoBlobResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, contenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, contentlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, content_),
  };
  PB_ArangoBlobResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoBlobResponse_descriptor_,
      PB_ArangoBlobResponse::default_instance_,
      PB_ArangoBlobResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoBlobResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoBlobResponse));
  PB_ArangoErrorResponse_descriptor_ = file->message_type(5);
  static const int PB_ArangoErrorResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoErrorResponse, message_),
  };
  PB_ArangoErrorResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_ArangoErrorResponse_descriptor_,
      PB_ArangoErrorResponse::default_instance_,
      PB_ArangoErrorResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoErrorResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ArangoErrorResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_ArangoErrorResponse));
  PB_ArangoMessageType_descriptor_ = file->enum_type(0);
  PB_ArangoMessageContentType_descriptor_ = file->enum_type(1);
  PB_ArangoRequestType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoKeyValue_descriptor_, &PB_ArangoKeyValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoMessage_descriptor_, &PB_ArangoMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoBatchMessage_descriptor_, &PB_ArangoBatchMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoBlobRequest_descriptor_, &PB_ArangoBlobRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoBlobResponse_descriptor_, &PB_ArangoBlobResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_ArangoErrorResponse_descriptor_, &PB_ArangoErrorResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto() {
  delete PB_ArangoKeyValue::default_instance_;
  delete PB_ArangoKeyValue_reflection_;
  delete PB_ArangoMessage::default_instance_;
  delete PB_ArangoMessage_reflection_;
  delete PB_ArangoBatchMessage::default_instance_;
  delete PB_ArangoBatchMessage_reflection_;
  delete PB_ArangoBlobRequest::default_instance_;
  delete PB_ArangoBlobRequest_reflection_;
  delete PB_ArangoBlobResponse::default_instance_;
  delete PB_ArangoBlobResponse_reflection_;
  delete PB_ArangoErrorResponse::default_instance_;
  delete PB_ArangoErrorResponse_reflection_;
}

void protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"lib/ProtocolBuffers/arangodb.proto\"/\n\021"
    "PB_ArangoKeyValue\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030"
    "\002 \002(\t\"<\n\020PB_ArangoMessage\022(\n\010messages\030\001 "
    "\003(\0132\026.PB_ArangoBatchMessage\"\306\001\n\025PB_Arang"
    "oBatchMessage\022#\n\004type\030\001 \002(\0162\025.PB_ArangoM"
    "essageType\022*\n\013blobRequest\030\002 \001(\0132\025.PB_Ara"
    "ngoBlobRequest\022,\n\014blobResponse\030\003 \001(\0132\026.P"
    "B_ArangoBlobResponse\022.\n\rerrorResponse\030\004 "
    "\001(\0132\027.PB_ArangoErrorResponse\"\334\001\n\024PB_Aran"
    "goBlobRequest\022*\n\013requestType\030\001 \002(\0162\025.PB_"
    "ArangoRequestType\022\013\n\003url\030\002 \002(\t\022\"\n\006values"
    "\030\003 \003(\0132\022.PB_ArangoKeyValue\022#\n\007headers\030\004 "
    "\003(\0132\022.PB_ArangoKeyValue\0221\n\013contentType\030\005"
    " \002(\0162\034.PB_ArangoMessageContentType\022\017\n\007co"
    "ntent\030\007 \001(\t\"\247\001\n\025PB_ArangoBlobResponse\022\016\n"
    "\006status\030\001 \002(\005\022#\n\007headers\030\002 \003(\0132\022.PB_Aran"
    "goKeyValue\0221\n\013contentType\030\003 \002(\0162\034.PB_Ara"
    "ngoMessageContentType\022\025\n\rcontentLength\030\006"
    " \002(\005\022\017\n\007content\030\004 \001(\t\")\n\026PB_ArangoErrorR"
    "esponse\022\017\n\007message\030\001 \002(\t*X\n\024PB_ArangoMes"
    "sageType\022\023\n\017PB_BLOB_REQUEST\020\000\022\024\n\020PB_BLOB"
    "_RESPONSE\020\001\022\025\n\021PB_ERROR_RESPONSE\020\002*Z\n\033PB"
    "_ArangoMessageContentType\022\021\n\rPB_NO_CONTE"
    "NT\020\000\022\023\n\017PB_TEXT_CONTENT\020\001\022\023\n\017PB_JSON_CON"
    "TENT\020\002*\230\001\n\024PB_ArangoRequestType\022\032\n\026PB_RE"
    "QUEST_TYPE_DELETE\020\000\022\027\n\023PB_REQUEST_TYPE_G"
    "ET\020\001\022\030\n\024PB_REQUEST_TYPE_HEAD\020\002\022\030\n\024PB_REQ"
    "UEST_TYPE_POST\020\003\022\027\n\023PB_REQUEST_TYPE_PUT\020"
    "\004", 1121);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lib/ProtocolBuffers/arangodb.proto", &protobuf_RegisterTypes);
  PB_ArangoKeyValue::default_instance_ = new PB_ArangoKeyValue();
  PB_ArangoMessage::default_instance_ = new PB_ArangoMessage();
  PB_ArangoBatchMessage::default_instance_ = new PB_ArangoBatchMessage();
  PB_ArangoBlobRequest::default_instance_ = new PB_ArangoBlobRequest();
  PB_ArangoBlobResponse::default_instance_ = new PB_ArangoBlobResponse();
  PB_ArangoErrorResponse::default_instance_ = new PB_ArangoErrorResponse();
  PB_ArangoKeyValue::default_instance_->InitAsDefaultInstance();
  PB_ArangoMessage::default_instance_->InitAsDefaultInstance();
  PB_ArangoBatchMessage::default_instance_->InitAsDefaultInstance();
  PB_ArangoBlobRequest::default_instance_->InitAsDefaultInstance();
  PB_ArangoBlobResponse::default_instance_->InitAsDefaultInstance();
  PB_ArangoErrorResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lib_2fProtocolBuffers_2farangodb_2eproto {
  StaticDescriptorInitializer_lib_2fProtocolBuffers_2farangodb_2eproto() {
    protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  }
} static_descriptor_initializer_lib_2fProtocolBuffers_2farangodb_2eproto_;

const ::google::protobuf::EnumDescriptor* PB_ArangoMessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoMessageType_descriptor_;
}
bool PB_ArangoMessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_ArangoMessageContentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoMessageContentType_descriptor_;
}
bool PB_ArangoMessageContentType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_ArangoRequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoRequestType_descriptor_;
}
bool PB_ArangoRequestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoKeyValue::kKeyFieldNumber;
const int PB_ArangoKeyValue::kValueFieldNumber;
#endif  // !_MSC_VER

PB_ArangoKeyValue::PB_ArangoKeyValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoKeyValue::InitAsDefaultInstance() {
}

PB_ArangoKeyValue::PB_ArangoKeyValue(const PB_ArangoKeyValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoKeyValue::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoKeyValue::~PB_ArangoKeyValue() {
  SharedDtor();
}

void PB_ArangoKeyValue::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void PB_ArangoKeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoKeyValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoKeyValue_descriptor_;
}

const PB_ArangoKeyValue& PB_ArangoKeyValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoKeyValue* PB_ArangoKeyValue::default_instance_ = NULL;

PB_ArangoKeyValue* PB_ArangoKeyValue::New() const {
  return new PB_ArangoKeyValue;
}

void PB_ArangoKeyValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoKeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoKeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(), output);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoKeyValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoKeyValue::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }
    
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoKeyValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoKeyValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoKeyValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoKeyValue::MergeFrom(const PB_ArangoKeyValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoKeyValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoKeyValue::CopyFrom(const PB_ArangoKeyValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoKeyValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void PB_ArangoKeyValue::Swap(PB_ArangoKeyValue* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoKeyValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoKeyValue_descriptor_;
  metadata.reflection = PB_ArangoKeyValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoMessage::kMessagesFieldNumber;
#endif  // !_MSC_VER

PB_ArangoMessage::PB_ArangoMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoMessage::InitAsDefaultInstance() {
}

PB_ArangoMessage::PB_ArangoMessage(const PB_ArangoMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoMessage::~PB_ArangoMessage() {
  SharedDtor();
}

void PB_ArangoMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_ArangoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoMessage_descriptor_;
}

const PB_ArangoMessage& PB_ArangoMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoMessage* PB_ArangoMessage::default_instance_ = NULL;

PB_ArangoMessage* PB_ArangoMessage::New() const {
  return new PB_ArangoMessage;
}

void PB_ArangoMessage::Clear() {
  messages_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_ArangoBatchMessage messages = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_messages()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_messages;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PB_ArangoBatchMessage messages = 1;
  for (int i = 0; i < this->messages_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->messages(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PB_ArangoBatchMessage messages = 1;
  for (int i = 0; i < this->messages_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->messages(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoMessage::ByteSize() const {
  int total_size = 0;
  
  // repeated .PB_ArangoBatchMessage messages = 1;
  total_size += 1 * this->messages_size();
  for (int i = 0; i < this->messages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->messages(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoMessage::MergeFrom(const PB_ArangoMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  messages_.MergeFrom(from.messages_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoMessage::CopyFrom(const PB_ArangoMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoMessage::IsInitialized() const {
  
  for (int i = 0; i < messages_size(); i++) {
    if (!this->messages(i).IsInitialized()) return false;
  }
  return true;
}

void PB_ArangoMessage::Swap(PB_ArangoMessage* other) {
  if (other != this) {
    messages_.Swap(&other->messages_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoMessage_descriptor_;
  metadata.reflection = PB_ArangoMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoBatchMessage::kTypeFieldNumber;
const int PB_ArangoBatchMessage::kBlobRequestFieldNumber;
const int PB_ArangoBatchMessage::kBlobResponseFieldNumber;
const int PB_ArangoBatchMessage::kErrorResponseFieldNumber;
#endif  // !_MSC_VER

PB_ArangoBatchMessage::PB_ArangoBatchMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoBatchMessage::InitAsDefaultInstance() {
  blobrequest_ = const_cast< ::PB_ArangoBlobRequest*>(&::PB_ArangoBlobRequest::default_instance());
  blobresponse_ = const_cast< ::PB_ArangoBlobResponse*>(&::PB_ArangoBlobResponse::default_instance());
  errorresponse_ = const_cast< ::PB_ArangoErrorResponse*>(&::PB_ArangoErrorResponse::default_instance());
}

PB_ArangoBatchMessage::PB_ArangoBatchMessage(const PB_ArangoBatchMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoBatchMessage::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  blobrequest_ = NULL;
  blobresponse_ = NULL;
  errorresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoBatchMessage::~PB_ArangoBatchMessage() {
  SharedDtor();
}

void PB_ArangoBatchMessage::SharedDtor() {
  if (this != default_instance_) {
    delete blobrequest_;
    delete blobresponse_;
    delete errorresponse_;
  }
}

void PB_ArangoBatchMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoBatchMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoBatchMessage_descriptor_;
}

const PB_ArangoBatchMessage& PB_ArangoBatchMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoBatchMessage* PB_ArangoBatchMessage::default_instance_ = NULL;

PB_ArangoBatchMessage* PB_ArangoBatchMessage::New() const {
  return new PB_ArangoBatchMessage;
}

void PB_ArangoBatchMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_blobrequest()) {
      if (blobrequest_ != NULL) blobrequest_->::PB_ArangoBlobRequest::Clear();
    }
    if (has_blobresponse()) {
      if (blobresponse_ != NULL) blobresponse_->::PB_ArangoBlobResponse::Clear();
    }
    if (has_errorresponse()) {
      if (errorresponse_ != NULL) errorresponse_->::PB_ArangoErrorResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoBatchMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PB_ArangoMessageType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (PB_ArangoMessageType_IsValid(value)) {
            set_type(static_cast< PB_ArangoMessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_blobRequest;
        break;
      }
      
      // optional .PB_ArangoBlobRequest blobRequest = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blobRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blobrequest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_blobResponse;
        break;
      }
      
      // optional .PB_ArangoBlobResponse blobResponse = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blobResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blobresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_errorResponse;
        break;
      }
      
      // optional .PB_ArangoErrorResponse errorResponse = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_errorResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errorresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoBatchMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .PB_ArangoMessageType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional .PB_ArangoBlobRequest blobRequest = 2;
  if (has_blobrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blobrequest(), output);
  }
  
  // optional .PB_ArangoBlobResponse blobResponse = 3;
  if (has_blobresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blobresponse(), output);
  }
  
  // optional .PB_ArangoErrorResponse errorResponse = 4;
  if (has_errorresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->errorresponse(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoBatchMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .PB_ArangoMessageType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional .PB_ArangoBlobRequest blobRequest = 2;
  if (has_blobrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->blobrequest(), target);
  }
  
  // optional .PB_ArangoBlobResponse blobResponse = 3;
  if (has_blobresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->blobresponse(), target);
  }
  
  // optional .PB_ArangoErrorResponse errorResponse = 4;
  if (has_errorresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->errorresponse(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoBatchMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .PB_ArangoMessageType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional .PB_ArangoBlobRequest blobRequest = 2;
    if (has_blobrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blobrequest());
    }
    
    // optional .PB_ArangoBlobResponse blobResponse = 3;
    if (has_blobresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blobresponse());
    }
    
    // optional .PB_ArangoErrorResponse errorResponse = 4;
    if (has_errorresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->errorresponse());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoBatchMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoBatchMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoBatchMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoBatchMessage::MergeFrom(const PB_ArangoBatchMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_blobrequest()) {
      mutable_blobrequest()->::PB_ArangoBlobRequest::MergeFrom(from.blobrequest());
    }
    if (from.has_blobresponse()) {
      mutable_blobresponse()->::PB_ArangoBlobResponse::MergeFrom(from.blobresponse());
    }
    if (from.has_errorresponse()) {
      mutable_errorresponse()->::PB_ArangoErrorResponse::MergeFrom(from.errorresponse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoBatchMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoBatchMessage::CopyFrom(const PB_ArangoBatchMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoBatchMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_blobrequest()) {
    if (!this->blobrequest().IsInitialized()) return false;
  }
  if (has_blobresponse()) {
    if (!this->blobresponse().IsInitialized()) return false;
  }
  if (has_errorresponse()) {
    if (!this->errorresponse().IsInitialized()) return false;
  }
  return true;
}

void PB_ArangoBatchMessage::Swap(PB_ArangoBatchMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(blobrequest_, other->blobrequest_);
    std::swap(blobresponse_, other->blobresponse_);
    std::swap(errorresponse_, other->errorresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoBatchMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoBatchMessage_descriptor_;
  metadata.reflection = PB_ArangoBatchMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoBlobRequest::kRequestTypeFieldNumber;
const int PB_ArangoBlobRequest::kUrlFieldNumber;
const int PB_ArangoBlobRequest::kValuesFieldNumber;
const int PB_ArangoBlobRequest::kHeadersFieldNumber;
const int PB_ArangoBlobRequest::kContentTypeFieldNumber;
const int PB_ArangoBlobRequest::kContentFieldNumber;
#endif  // !_MSC_VER

PB_ArangoBlobRequest::PB_ArangoBlobRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoBlobRequest::InitAsDefaultInstance() {
}

PB_ArangoBlobRequest::PB_ArangoBlobRequest(const PB_ArangoBlobRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoBlobRequest::SharedCtor() {
  _cached_size_ = 0;
  requesttype_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  contenttype_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoBlobRequest::~PB_ArangoBlobRequest() {
  SharedDtor();
}

void PB_ArangoBlobRequest::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void PB_ArangoBlobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoBlobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoBlobRequest_descriptor_;
}

const PB_ArangoBlobRequest& PB_ArangoBlobRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoBlobRequest* PB_ArangoBlobRequest::default_instance_ = NULL;

PB_ArangoBlobRequest* PB_ArangoBlobRequest::New() const {
  return new PB_ArangoBlobRequest;
}

void PB_ArangoBlobRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    requesttype_ = 0;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    contenttype_ = 0;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  values_.Clear();
  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoBlobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PB_ArangoRequestType requestType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (PB_ArangoRequestType_IsValid(value)) {
            set_requesttype(static_cast< PB_ArangoRequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }
      
      // required string url = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_values;
        break;
      }
      
      // repeated .PB_ArangoKeyValue values = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_values()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_values;
        if (input->ExpectTag(34)) goto parse_headers;
        break;
      }
      
      // repeated .PB_ArangoKeyValue headers = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_headers;
        if (input->ExpectTag(40)) goto parse_contentType;
        break;
      }
      
      // required .PB_ArangoMessageContentType contentType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_contentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (PB_ArangoMessageContentType_IsValid(value)) {
            set_contenttype(static_cast< PB_ArangoMessageContentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_content;
        break;
      }
      
      // optional string content = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoBlobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .PB_ArangoRequestType requestType = 1;
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->requesttype(), output);
  }
  
  // required string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->url(), output);
  }
  
  // repeated .PB_ArangoKeyValue values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->values(i), output);
  }
  
  // repeated .PB_ArangoKeyValue headers = 4;
  for (int i = 0; i < this->headers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->headers(i), output);
  }
  
  // required .PB_ArangoMessageContentType contentType = 5;
  if (has_contenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->contenttype(), output);
  }
  
  // optional string content = 7;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->content(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoBlobRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .PB_ArangoRequestType requestType = 1;
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->requesttype(), target);
  }
  
  // required string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }
  
  // repeated .PB_ArangoKeyValue values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->values(i), target);
  }
  
  // repeated .PB_ArangoKeyValue headers = 4;
  for (int i = 0; i < this->headers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->headers(i), target);
  }
  
  // required .PB_ArangoMessageContentType contentType = 5;
  if (has_contenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->contenttype(), target);
  }
  
  // optional string content = 7;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->content(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoBlobRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .PB_ArangoRequestType requestType = 1;
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->requesttype());
    }
    
    // required string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }
    
    // required .PB_ArangoMessageContentType contentType = 5;
    if (has_contenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->contenttype());
    }
    
    // optional string content = 7;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
  }
  // repeated .PB_ArangoKeyValue values = 3;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->values(i));
  }
  
  // repeated .PB_ArangoKeyValue headers = 4;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoBlobRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoBlobRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoBlobRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoBlobRequest::MergeFrom(const PB_ArangoBlobRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_contenttype()) {
      set_contenttype(from.contenttype());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoBlobRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoBlobRequest::CopyFrom(const PB_ArangoBlobRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoBlobRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000013) != 0x00000013) return false;
  
  for (int i = 0; i < values_size(); i++) {
    if (!this->values(i).IsInitialized()) return false;
  }
  for (int i = 0; i < headers_size(); i++) {
    if (!this->headers(i).IsInitialized()) return false;
  }
  return true;
}

void PB_ArangoBlobRequest::Swap(PB_ArangoBlobRequest* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(url_, other->url_);
    values_.Swap(&other->values_);
    headers_.Swap(&other->headers_);
    std::swap(contenttype_, other->contenttype_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoBlobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoBlobRequest_descriptor_;
  metadata.reflection = PB_ArangoBlobRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoBlobResponse::kStatusFieldNumber;
const int PB_ArangoBlobResponse::kHeadersFieldNumber;
const int PB_ArangoBlobResponse::kContentTypeFieldNumber;
const int PB_ArangoBlobResponse::kContentLengthFieldNumber;
const int PB_ArangoBlobResponse::kContentFieldNumber;
#endif  // !_MSC_VER

PB_ArangoBlobResponse::PB_ArangoBlobResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoBlobResponse::InitAsDefaultInstance() {
}

PB_ArangoBlobResponse::PB_ArangoBlobResponse(const PB_ArangoBlobResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoBlobResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  contenttype_ = 0;
  contentlength_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoBlobResponse::~PB_ArangoBlobResponse() {
  SharedDtor();
}

void PB_ArangoBlobResponse::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void PB_ArangoBlobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoBlobResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoBlobResponse_descriptor_;
}

const PB_ArangoBlobResponse& PB_ArangoBlobResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoBlobResponse* PB_ArangoBlobResponse::default_instance_ = NULL;

PB_ArangoBlobResponse* PB_ArangoBlobResponse::New() const {
  return new PB_ArangoBlobResponse;
}

void PB_ArangoBlobResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    contenttype_ = 0;
    contentlength_ = 0;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoBlobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_headers;
        break;
      }
      
      // repeated .PB_ArangoKeyValue headers = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_headers;
        if (input->ExpectTag(24)) goto parse_contentType;
        break;
      }
      
      // required .PB_ArangoMessageContentType contentType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_contentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (PB_ArangoMessageContentType_IsValid(value)) {
            set_contenttype(static_cast< PB_ArangoMessageContentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }
      
      // optional string content = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_contentLength;
        break;
      }
      
      // required int32 contentLength = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_contentLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contentlength_)));
          set_has_contentlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoBlobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // repeated .PB_ArangoKeyValue headers = 2;
  for (int i = 0; i < this->headers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->headers(i), output);
  }
  
  // required .PB_ArangoMessageContentType contentType = 3;
  if (has_contenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->contenttype(), output);
  }
  
  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->content(), output);
  }
  
  // required int32 contentLength = 6;
  if (has_contentlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->contentlength(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoBlobResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // repeated .PB_ArangoKeyValue headers = 2;
  for (int i = 0; i < this->headers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->headers(i), target);
  }
  
  // required .PB_ArangoMessageContentType contentType = 3;
  if (has_contenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->contenttype(), target);
  }
  
  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }
  
  // required int32 contentLength = 6;
  if (has_contentlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->contentlength(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoBlobResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // required .PB_ArangoMessageContentType contentType = 3;
    if (has_contenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->contenttype());
    }
    
    // required int32 contentLength = 6;
    if (has_contentlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->contentlength());
    }
    
    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
  }
  // repeated .PB_ArangoKeyValue headers = 2;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoBlobResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoBlobResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoBlobResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoBlobResponse::MergeFrom(const PB_ArangoBlobResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_contenttype()) {
      set_contenttype(from.contenttype());
    }
    if (from.has_contentlength()) {
      set_contentlength(from.contentlength());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoBlobResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoBlobResponse::CopyFrom(const PB_ArangoBlobResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoBlobResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  
  for (int i = 0; i < headers_size(); i++) {
    if (!this->headers(i).IsInitialized()) return false;
  }
  return true;
}

void PB_ArangoBlobResponse::Swap(PB_ArangoBlobResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    headers_.Swap(&other->headers_);
    std::swap(contenttype_, other->contenttype_);
    std::swap(contentlength_, other->contentlength_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoBlobResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoBlobResponse_descriptor_;
  metadata.reflection = PB_ArangoBlobResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_ArangoErrorResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

PB_ArangoErrorResponse::PB_ArangoErrorResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_ArangoErrorResponse::InitAsDefaultInstance() {
}

PB_ArangoErrorResponse::PB_ArangoErrorResponse(const PB_ArangoErrorResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_ArangoErrorResponse::SharedCtor() {
  _cached_size_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_ArangoErrorResponse::~PB_ArangoErrorResponse() {
  SharedDtor();
}

void PB_ArangoErrorResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void PB_ArangoErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ArangoErrorResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ArangoErrorResponse_descriptor_;
}

const PB_ArangoErrorResponse& PB_ArangoErrorResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();  return *default_instance_;
}

PB_ArangoErrorResponse* PB_ArangoErrorResponse::default_instance_ = NULL;

PB_ArangoErrorResponse* PB_ArangoErrorResponse::New() const {
  return new PB_ArangoErrorResponse;
}

void PB_ArangoErrorResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_ArangoErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_ArangoErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_ArangoErrorResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_ArangoErrorResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ArangoErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_ArangoErrorResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_ArangoErrorResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_ArangoErrorResponse::MergeFrom(const PB_ArangoErrorResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_ArangoErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ArangoErrorResponse::CopyFrom(const PB_ArangoErrorResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ArangoErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void PB_ArangoErrorResponse::Swap(PB_ArangoErrorResponse* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_ArangoErrorResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ArangoErrorResponse_descriptor_;
  metadata.reflection = PB_ArangoErrorResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
