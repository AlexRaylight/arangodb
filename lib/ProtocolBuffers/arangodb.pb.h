// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/ProtocolBuffers/arangodb.proto

#ifndef PROTOBUF_lib_2fProtocolBuffers_2farangodb_2eproto__INCLUDED
#define PROTOBUF_lib_2fProtocolBuffers_2farangodb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto();

class ArangoMessage;
class ArangoKeyValue;
class ArangoBlobMessage;

enum ArangoMessageType {
  BLOB_MSG = 1
};
bool ArangoMessageType_IsValid(int value);
const ArangoMessageType ArangoMessageType_MIN = BLOB_MSG;
const ArangoMessageType ArangoMessageType_MAX = BLOB_MSG;
const int ArangoMessageType_ARRAYSIZE = ArangoMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ArangoMessageType_descriptor();
inline const ::std::string& ArangoMessageType_Name(ArangoMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ArangoMessageType_descriptor(), value);
}
inline bool ArangoMessageType_Parse(
    const ::std::string& name, ArangoMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArangoMessageType>(
    ArangoMessageType_descriptor(), name, value);
}
enum ArangoMessageContentType {
  NO_CONTENT = 0,
  TEXT_CONTENT = 1,
  JSON_CONTENT = 2
};
bool ArangoMessageContentType_IsValid(int value);
const ArangoMessageContentType ArangoMessageContentType_MIN = NO_CONTENT;
const ArangoMessageContentType ArangoMessageContentType_MAX = JSON_CONTENT;
const int ArangoMessageContentType_ARRAYSIZE = ArangoMessageContentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ArangoMessageContentType_descriptor();
inline const ::std::string& ArangoMessageContentType_Name(ArangoMessageContentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ArangoMessageContentType_descriptor(), value);
}
inline bool ArangoMessageContentType_Parse(
    const ::std::string& name, ArangoMessageContentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArangoMessageContentType>(
    ArangoMessageContentType_descriptor(), name, value);
}
// ===================================================================

class ArangoMessage : public ::google::protobuf::Message {
 public:
  ArangoMessage();
  virtual ~ArangoMessage();
  
  ArangoMessage(const ArangoMessage& from);
  
  inline ArangoMessage& operator=(const ArangoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArangoMessage& default_instance();
  
  void Swap(ArangoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ArangoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArangoMessage& from);
  void MergeFrom(const ArangoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ArangoMessageType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ArangoMessageType type() const;
  inline void set_type(ArangoMessageType value);
  
  // optional .ArangoBlobMessage blob = 2;
  inline bool has_blob() const;
  inline void clear_blob();
  static const int kBlobFieldNumber = 2;
  inline const ::ArangoBlobMessage& blob() const;
  inline ::ArangoBlobMessage* mutable_blob();
  inline ::ArangoBlobMessage* release_blob();
  
  // @@protoc_insertion_point(class_scope:ArangoMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_blob();
  inline void clear_has_blob();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ArangoBlobMessage* blob_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto();
  
  void InitAsDefaultInstance();
  static ArangoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ArangoKeyValue : public ::google::protobuf::Message {
 public:
  ArangoKeyValue();
  virtual ~ArangoKeyValue();
  
  ArangoKeyValue(const ArangoKeyValue& from);
  
  inline ArangoKeyValue& operator=(const ArangoKeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArangoKeyValue& default_instance();
  
  void Swap(ArangoKeyValue* other);
  
  // implements Message ----------------------------------------------
  
  ArangoKeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArangoKeyValue& from);
  void MergeFrom(const ArangoKeyValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:ArangoKeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto();
  
  void InitAsDefaultInstance();
  static ArangoKeyValue* default_instance_;
};
// -------------------------------------------------------------------

class ArangoBlobMessage : public ::google::protobuf::Message {
 public:
  ArangoBlobMessage();
  virtual ~ArangoBlobMessage();
  
  ArangoBlobMessage(const ArangoBlobMessage& from);
  
  inline ArangoBlobMessage& operator=(const ArangoBlobMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArangoBlobMessage& default_instance();
  
  void Swap(ArangoBlobMessage* other);
  
  // implements Message ----------------------------------------------
  
  ArangoBlobMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArangoBlobMessage& from);
  void MergeFrom(const ArangoBlobMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string url = 1;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 1;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  
  // repeated .ArangoKeyValue parameters = 2;
  inline int parameters_size() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 2;
  inline const ::ArangoKeyValue& parameters(int index) const;
  inline ::ArangoKeyValue* mutable_parameters(int index);
  inline ::ArangoKeyValue* add_parameters();
  inline const ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >&
      parameters() const;
  inline ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >*
      mutable_parameters();
  
  // repeated .ArangoKeyValue headers = 3;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 3;
  inline const ::ArangoKeyValue& headers(int index) const;
  inline ::ArangoKeyValue* mutable_headers(int index);
  inline ::ArangoKeyValue* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >*
      mutable_headers();
  
  // required .ArangoMessageContentType contentType = 4;
  inline bool has_contenttype() const;
  inline void clear_contenttype();
  static const int kContentTypeFieldNumber = 4;
  inline ArangoMessageContentType contenttype() const;
  inline void set_contenttype(ArangoMessageContentType value);
  
  // optional string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:ArangoBlobMessage)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_contenttype();
  inline void clear_has_contenttype();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* url_;
  ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue > parameters_;
  ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue > headers_;
  ::std::string* content_;
  int contenttype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_AssignDesc_lib_2fProtocolBuffers_2farangodb_2eproto();
  friend void protobuf_ShutdownFile_lib_2fProtocolBuffers_2farangodb_2eproto();
  
  void InitAsDefaultInstance();
  static ArangoBlobMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ArangoMessage

// required .ArangoMessageType type = 1;
inline bool ArangoMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArangoMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArangoMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArangoMessage::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ArangoMessageType ArangoMessage::type() const {
  return static_cast< ArangoMessageType >(type_);
}
inline void ArangoMessage::set_type(ArangoMessageType value) {
  GOOGLE_DCHECK(ArangoMessageType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .ArangoBlobMessage blob = 2;
inline bool ArangoMessage::has_blob() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArangoMessage::set_has_blob() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArangoMessage::clear_has_blob() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArangoMessage::clear_blob() {
  if (blob_ != NULL) blob_->::ArangoBlobMessage::Clear();
  clear_has_blob();
}
inline const ::ArangoBlobMessage& ArangoMessage::blob() const {
  return blob_ != NULL ? *blob_ : *default_instance_->blob_;
}
inline ::ArangoBlobMessage* ArangoMessage::mutable_blob() {
  set_has_blob();
  if (blob_ == NULL) blob_ = new ::ArangoBlobMessage;
  return blob_;
}
inline ::ArangoBlobMessage* ArangoMessage::release_blob() {
  clear_has_blob();
  ::ArangoBlobMessage* temp = blob_;
  blob_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ArangoKeyValue

// required string key = 1;
inline bool ArangoKeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArangoKeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArangoKeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArangoKeyValue::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& ArangoKeyValue::key() const {
  return *key_;
}
inline void ArangoKeyValue::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ArangoKeyValue::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ArangoKeyValue::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArangoKeyValue::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* ArangoKeyValue::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string value = 2;
inline bool ArangoKeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArangoKeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArangoKeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArangoKeyValue::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& ArangoKeyValue::value() const {
  return *value_;
}
inline void ArangoKeyValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ArangoKeyValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ArangoKeyValue::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArangoKeyValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* ArangoKeyValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ArangoBlobMessage

// required string url = 1;
inline bool ArangoBlobMessage::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArangoBlobMessage::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArangoBlobMessage::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArangoBlobMessage::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ArangoBlobMessage::url() const {
  return *url_;
}
inline void ArangoBlobMessage::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ArangoBlobMessage::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ArangoBlobMessage::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArangoBlobMessage::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ArangoBlobMessage::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ArangoKeyValue parameters = 2;
inline int ArangoBlobMessage::parameters_size() const {
  return parameters_.size();
}
inline void ArangoBlobMessage::clear_parameters() {
  parameters_.Clear();
}
inline const ::ArangoKeyValue& ArangoBlobMessage::parameters(int index) const {
  return parameters_.Get(index);
}
inline ::ArangoKeyValue* ArangoBlobMessage::mutable_parameters(int index) {
  return parameters_.Mutable(index);
}
inline ::ArangoKeyValue* ArangoBlobMessage::add_parameters() {
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >&
ArangoBlobMessage::parameters() const {
  return parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >*
ArangoBlobMessage::mutable_parameters() {
  return &parameters_;
}

// repeated .ArangoKeyValue headers = 3;
inline int ArangoBlobMessage::headers_size() const {
  return headers_.size();
}
inline void ArangoBlobMessage::clear_headers() {
  headers_.Clear();
}
inline const ::ArangoKeyValue& ArangoBlobMessage::headers(int index) const {
  return headers_.Get(index);
}
inline ::ArangoKeyValue* ArangoBlobMessage::mutable_headers(int index) {
  return headers_.Mutable(index);
}
inline ::ArangoKeyValue* ArangoBlobMessage::add_headers() {
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >&
ArangoBlobMessage::headers() const {
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::ArangoKeyValue >*
ArangoBlobMessage::mutable_headers() {
  return &headers_;
}

// required .ArangoMessageContentType contentType = 4;
inline bool ArangoBlobMessage::has_contenttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArangoBlobMessage::set_has_contenttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArangoBlobMessage::clear_has_contenttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArangoBlobMessage::clear_contenttype() {
  contenttype_ = 0;
  clear_has_contenttype();
}
inline ArangoMessageContentType ArangoBlobMessage::contenttype() const {
  return static_cast< ArangoMessageContentType >(contenttype_);
}
inline void ArangoBlobMessage::set_contenttype(ArangoMessageContentType value) {
  GOOGLE_DCHECK(ArangoMessageContentType_IsValid(value));
  set_has_contenttype();
  contenttype_ = value;
}

// optional string content = 5;
inline bool ArangoBlobMessage::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArangoBlobMessage::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArangoBlobMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArangoBlobMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ArangoBlobMessage::content() const {
  return *content_;
}
inline void ArangoBlobMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ArangoBlobMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ArangoBlobMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArangoBlobMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ArangoBlobMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ArangoMessageType>() {
  return ArangoMessageType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ArangoMessageContentType>() {
  return ArangoMessageContentType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lib_2fProtocolBuffers_2farangodb_2eproto__INCLUDED
