////////////////////////////////////////////////////////////////////////////////
/// @brief transaction operations interface
///
/// @file
///
/// DISCLAIMER
///
/// Copyright 2004-2013 triAGENS GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is triAGENS GmbH, Cologne, Germany
///
/// @author Jan Steemann
/// @author Copyright 2011-2013, triAGENS GmbH, Cologne, Germany
////////////////////////////////////////////////////////////////////////////////

#include "Operations.h"

#include "BasicsC/logging.h"

using namespace std;
using namespace triagens::transaction;

////////////////////////////////////////////////////////////////////////////////
/// @brief get a document
////////////////////////////////////////////////////////////////////////////////

int getDocument () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
/// @brief save a document
////////////////////////////////////////////////////////////////////////////////

int saveDocument () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
/// @brief remove a document
////////////////////////////////////////////////////////////////////////////////

int removeDocument () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
/// @brief update a document
////////////////////////////////////////////////////////////////////////////////

int updateDocument () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
/// @brief replace a document
////////////////////////////////////////////////////////////////////////////////

int replaceDocument () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
/// @brief truncate a collection
////////////////////////////////////////////////////////////////////////////////

int truncate () { 
  int res = TRI_ERROR_NO_ERROR;
  return res;
}

// Local Variables:
// mode: outline-minor
// outline-regexp: "/// @brief\\|/// {@inheritDoc}\\|/// @addtogroup\\|/// @page\\|// --SECTION--\\|/// @\\}"
// End:
