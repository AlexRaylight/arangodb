////////////////////////////////////////////////////////////////////////////////
/// @brief over the wire protocol
///
/// @file
///
/// DISCLAIMER
///
/// Copyright 2012 triagens GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is triAGENS GmbH, Cologne, Germany
///
/// @author Dr. Frank Celler
/// @author Copyright 2012, triAGENS GmbH, Cologne, Germany
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @page HttpCollectionTOC
///
/// <ul>
///  <li>@ref HttpCollection
///   <ul>
///    <li>@ref HttpCollectionIntro</li>
///    <li>@ref HttpCollectionResource</li>
///    <li>@ref HttpCollectionHttp
///     @copydetails HttpCollectionCallsTOC
///    </li>
///   </ul>
///  </li>
/// </ul>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @page HttpCollectionCallsTOC
///
/// <ul>
///  <li>@ref HttpCollectionConstructor
///   <ul>
///    <li>@ref HttpCollectionCreate "POST /_api/collection"</li>
///    <li>@ref HttpCollectionDelete "DELETE /_api/collection/collection-name"</li>
///    <li>@ref HttpCollectionTruncate "PUT /_api/collection/collection-name/truncate"</li>
///   </ul>
///  </li>
///  <li>@ref HttpCollectionReading
///   <ul>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name"</li>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name/properties"</li>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name/count"</li>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name/figures"</li>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name/revision"</li>
///    <li>@ref HttpCollectionRead "GET /_api/collection/collection-name"</li>
///    <li>@ref HttpCollectionReadAll "GET /_api/collection/"</li>
///   </ul>
///  </li>
///  <li>@ref HttpCollectionChanging
///   <ul>
///    <li>@ref HttpCollectionLoad "PUT /_api/collection/collection-name/load"</li>
///    <li>@ref HttpCollectionUnload "PUT /_api/collection/collection-name/unload"</li>
///    <li>@ref HttpCollectionProperties "PUT /_api/collection/collection-name/properties"</li>
///    <li>@ref HttpCollectionRename "PUT /_api/collection/collection-name/rename"</li>
///   </ul>
///  </li>
/// </ul>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @page HttpCollection HTTP Interface for Collections
///
/// This is an introduction to ArangoDB's Http interface for collections.
///
/// @EMBEDTOC{HttpCollectionTOC}
///
/// @section HttpCollectionIntro Collections
////////////////////////////////////////////
///
/// @copydoc GlossaryCollection
///
/// @copydoc GlossaryCollectionIdentifier
///
/// @copydoc GlossaryCollectionName
///
/// The basic operations (create, read, update, delete) for documents are mapped
/// to the standard HTTP methods (POST, GET, PUT, DELETE).
///
/// @section HttpCollectionResource Address of a Collection
////////////////////////////////////////////////////////////
///
/// All collections in ArangoDB have an unique identifier and
/// a unique name. ArangoDB internally uses the collection's unique 
/// identifier to look up collections. This identifier however is
/// managed by ArangoDB and the user has no control over it. In
/// order to allow users use their own names, each collection also
/// has a unique name, which is specified by the user.
/// To access a collection from the user perspective, the 
/// collection name should be used, i.e.:
///
/// @LIT{http://server:port/_api/collection/collection-name}
///
/// For example: Assume that the collection identifier is @LIT{7254820}
/// and the collection name is @LIT{demo}, then the URL of that 
/// collection is:
///
/// @LIT{http://localhost:8529/_api/collection/demo}
///
/// @section HttpCollectionHttp Working with Collections using HTTP
///////////////////////////////////////////////////////////////////
///
/// @subsection HttpCollectionConstructor Creating and Deleting Collections
///////////////////////////////////////////////////////////////////////////
///
/// @anchor HttpCollectionCreate
/// @copydetails JSF_post_api_collection
///
/// @anchor HttpCollectionDelete
/// @copydetails JSF_delete_api_collection
///
/// @anchor HttpCollectionTruncate
/// @copydetails JSF_put_api_collection_truncate
///
/// @subsection HttpCollectionReading Getting Information about a Collection
////////////////////////////////////////////////////////////////////////////
///
/// @anchor HttpCollectionRead
/// @copydetails JSF_get_api_collection
///
/// @anchor HttpCollectionReadAll
/// @copydetails JSF_get_api_collections
///
/// @subsection HttpCollectionChanging Modifying a Collection
/////////////////////////////////////////////////////////////
///
/// @anchor HttpCollectionLoad
/// @copydetails JSF_put_api_collection_load
///
/// @anchor HttpCollectionUnload
/// @copydetails JSF_put_api_collection_unload
///
/// @anchor HttpCollectionProperties
/// @copydetails JSF_put_api_collection_properties
///
/// @anchor HttpCollectionRename
/// @copydetails JSF_put_api_collection_rename
////////////////////////////////////////////////////////////////////////////////

// Local Variables:
// mode: c++
// mode: outline-minor
// outline-regexp: "^\\(/// @brief\\|/// {@inheritDoc}\\|/// @addtogroup\\|// --SECTION--\\|/// @page\\|/// @\\}\\)"
// End:
