!CHAPTER Fulltext indexes

!SUBSECTION Introduction to Fulltext Indexes

This is an introduction to ArangoDB's fulltext indexes.

It is possible to define a fulltext index on a single attribute.
The fulltext index will index all documents in the collection that
have a string value in the indexed attribute. It will tokenize the
string and insert all words occurring in the string into its index.
The fulltext index can then be used to efficiently find exact words or 
prefixes of words contained in the original documents.

!SECTION Accessing Fulltext Indexes from the Shell

`collection.ensureFulltextIndex(field, minWordLength)`

Creates a fulltext index on all documents on attribute *field*. 

Fulltext indexes are implicitly sparse: all documents which do not have 
the specified *field* attribute or that have a non-textual value in their 
*field* attribute will be ignored for indexing.
Only a single attribute can be indexed. Specifying multiple attributes is 
unsupported.

The minimum length of words that are indexed can be specified via the *minWordLength* 
parameter. Words shorter than minWordLength characters will not be indexed. 
*minWordLength* has a default value of 2, but this value might be changed in 
future versions of ArangoDB. It is thus recommended to explicitly specify this value.

In case the index is successfully created, the index identifier is returned.

```
arangosh> db.emails.ensureFulltextIndex("body");
{ "id" : "emails/42725508", "unique" : false, "type" : "fulltext", "fields" : ["body"], "isNewlyCreated" : true }
```

Note that in addition to the specialized index creation method, there is also the
general method `collection.ensureIndex`, which can be used to create indexes of any type:

*Examples*

```
arangosh> db.emails.ensureIndex({ type: "fulltext", fields: [ "body" ] });
```
