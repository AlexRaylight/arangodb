{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": "true",
                            "name": "body",
                            "description": "the body with name and options for a collection. <br><br>"
                        }
                    ],
                    "notes": "Creates an new collection with a given name. The request must contain an object with the following attributes. <br><br>  <ul class=\"swagger-list\"><li><em>name</em>: The name of the collection.  <li><em>waitForSync</em> (optional, default: false): If <em>true</em> then the data is synchronised to disk before returning from a create or update of a document.  <li><em>doCompact</em> (optional, default is <em>true</em>): whether or not the collection will be compacted.  <li><em>journalSize</em> (optional, default is a @ref CommandLineArangod \"configuration parameter\"): The maximal size of a journal or datafile.  Note that this also limits the maximal size of a single object. Must be at least 1MB.  <li><em>isSystem</em> (optional, default is <em>false</em>): If <em>true</em>, create a system collection. In this case <em>collection-name</em> should start with an underscore. End users should normally create non-system collections only. API implementors may be required to create system collections in very special occasions, but normally a regular collection will do.  <li><em>isVolatile</em> (optional, default is <em>false</em>): If <em>true</em> then the collection data is kept in-memory only and not made persistent. Unloading the collection will cause the collection data to be discarded. Stopping or re-starting the server will also cause full loss of data in the collection. Setting this option will make the resulting collection be  slightly faster than regular collections because ArangoDB does not enforce any synchronisation to disk and does not calculate any CRC  checksums for datafiles (as there are no datafiles).  This option should threrefore be used for cache-type collections only,  and not for data that cannot be re-created otherwise.  <li><em>keyOptions</em> (optional) additional options for key generation. If specified, then <em>keyOptions</em> should be a JSON array containing the following attributes (note: some of them are optional): - <em>type</em>: specifies the type of the key generator. The currently    available generators are <em>traditional</em> and <em>autoincrement</em>. - <em>allowUserKeys</em>: if set to <em>true</em>, then it is allowed to supply   own key values in the <em>_key</em> attribute of a document. If set to    <em>false</em>, then the key generator will solely be responsible for   generating keys and supplying own key values in the <em>_key</em> attribute   of documents is considered an error. - <em>increment</em>: increment value for <em>autoincrement</em> key generator.   Not used for other key generator types. - <em>offset</em>: initial offset value for <em>autoincrement</em> key generator.   Not used for other key generator types.  <li><em>type</em> (optional, default is <em>2</em>): the type of the collection to create. The following values for <em>type</em> are valid: - <em>2</em>: document collection - <em>3</em>: edges collection  <li><em>numberOfShards</em> (optional, default is <em>1</em>): in a cluster, this value determines the number of shards to create for the collection. In a single server setup, this option is meaningless.  <li><em>shardKeys</em> (optional, default is <em>[ \"_key\" ]</em>): in a cluster, this attribute determines which document attributes are used to determine the target shard for documents. Documents are sent to shards based on the values of their shard key attributes. The values of all shard key attributes in a document are hashed, and the hash value is used to  determine the target shard. Note that values of shard key attributes cannot be changed once set. This option is meaningless in a single server setup. </ul> *Examples* <br><br>",
                    "summary": "creates a collection",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection\n{\"name\":\"testCollectionBasics\"}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionBasics\n\n{ \n  \"id\" : \"791630193\", \n  \"name\" : \"testCollectionBasics\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\nshell> curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection\n{\"name\":\"testCollectionEdges\",\"type\":3}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionEdges\n\n{ \n  \"id\" : \"791761265\", \n  \"name\" : \"testCollectionEdges\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 3, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br><br><br><pre><code class=\"json\">shell> curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection\n{\"name\":\"testCollectionUsers\",\"keyOptions\":{\"type\":\"autoincrement\",\"increment\":5,\"allowUserKeys\":true}}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionUsers\n\n{ \n  \"id\" : \"792023409\", \n  \"name\" : \"testCollectionUsers\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "createsACollection"
                }
            ],
            "path": "/_api/collection"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": "false",
                            "name": "excludeSystem",
                            "description": "Whether or not system collections should be excluded from the result. <br><br>"
                        }
                    ],
                    "notes": "Returns an object with an attribute <em>collections</em> containing a  list of all collection descriptions. The same information is also available in the <em>names</em> as hash map with the collection names as keys. <br><br> By providing the optional URL parameter <em>excludeSystem</em> with a value of <em>true</em>, all system collections will be excluded from the response. <br><br> *Examples* <br><br> Return information about all collections: <br><br>",
                    "summary": "reads all collections",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"collections\" : [ \n    { \n      \"id\" : \"27349361\", \n      \"name\" : \"_statisticsRaw\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"784683377\", \n      \"name\" : \"internationalHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    { \n      \"id\" : \"607670641\", \n      \"name\" : \"better-example\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"700600689\", \n      \"name\" : \"friend_of\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    { \n      \"id\" : \"760631665\", \n      \"name\" : \"female\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"27742577\", \n      \"name\" : \"_statistics\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"151921\", \n      \"name\" : \"_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4149617\", \n      \"name\" : \"_replication\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"1921393\", \n      \"name\" : \"_routing\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"784159089\", \n      \"name\" : \"germanCity\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"700993905\", \n      \"name\" : \"Electronics\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"28135793\", \n      \"name\" : \"_statistics15\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"784552305\", \n      \"name\" : \"frenchHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    { \n      \"id\" : \"700469617\", \n      \"name\" : \"Customer\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4018545\", \n      \"name\" : \"_aqlfunctions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"1790321\", \n      \"name\" : \"_modules\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"3559793\", \n      \"name\" : \"_aal\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"700862833\", \n      \"name\" : \"Groceries\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"760893809\", \n      \"name\" : \"relation\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    { \n      \"id\" : \"789795185\", \n      \"name\" : \"animals\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"788877681\", \n      \"name\" : \"demo\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"784421233\", \n      \"name\" : \"frenchCity\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"1659249\", \n      \"name\" : \"_graphs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"700731761\", \n      \"name\" : \"Company\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"760762737\", \n      \"name\" : \"male\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4280689\", \n      \"name\" : \"_configuration\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"2052465\", \n      \"name\" : \"_cluster_kickstarter_plans\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"784290161\", \n      \"name\" : \"germanHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    { \n      \"id\" : \"701124977\", \n      \"name\" : \"has_bought\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    } \n  ], \n  \"names\" : { \n    \"_statisticsRaw\" : { \n      \"id\" : \"27349361\", \n      \"name\" : \"_statisticsRaw\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"internationalHighway\" : { \n      \"id\" : \"784683377\", \n      \"name\" : \"internationalHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    \"better-example\" : { \n      \"id\" : \"607670641\", \n      \"name\" : \"better-example\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"friend_of\" : { \n      \"id\" : \"700600689\", \n      \"name\" : \"friend_of\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    \"female\" : { \n      \"id\" : \"760631665\", \n      \"name\" : \"female\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_statistics\" : { \n      \"id\" : \"27742577\", \n      \"name\" : \"_statistics\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_users\" : { \n      \"id\" : \"151921\", \n      \"name\" : \"_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_replication\" : { \n      \"id\" : \"4149617\", \n      \"name\" : \"_replication\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_routing\" : { \n      \"id\" : \"1921393\", \n      \"name\" : \"_routing\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"germanCity\" : { \n      \"id\" : \"784159089\", \n      \"name\" : \"germanCity\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"Electronics\" : { \n      \"id\" : \"700993905\", \n      \"name\" : \"Electronics\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_statistics15\" : { \n      \"id\" : \"28135793\", \n      \"name\" : \"_statistics15\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"frenchHighway\" : { \n      \"id\" : \"784552305\", \n      \"name\" : \"frenchHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    \"Customer\" : { \n      \"id\" : \"700469617\", \n      \"name\" : \"Customer\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_aqlfunctions\" : { \n      \"id\" : \"4018545\", \n      \"name\" : \"_aqlfunctions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_modules\" : { \n      \"id\" : \"1790321\", \n      \"name\" : \"_modules\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_aal\" : { \n      \"id\" : \"3559793\", \n      \"name\" : \"_aal\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"Groceries\" : { \n      \"id\" : \"700862833\", \n      \"name\" : \"Groceries\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"relation\" : { \n      \"id\" : \"760893809\", \n      \"name\" : \"relation\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    \"animals\" : { \n      \"id\" : \"789795185\", \n      \"name\" : \"animals\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"demo\" : { \n      \"id\" : \"788877681\", \n      \"name\" : \"demo\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"frenchCity\" : { \n      \"id\" : \"784421233\", \n      \"name\" : \"frenchCity\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_graphs\" : { \n      \"id\" : \"1659249\", \n      \"name\" : \"_graphs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"Company\" : { \n      \"id\" : \"700731761\", \n      \"name\" : \"Company\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"male\" : { \n      \"id\" : \"760762737\", \n      \"name\" : \"male\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_configuration\" : { \n      \"id\" : \"4280689\", \n      \"name\" : \"_configuration\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_cluster_kickstarter_plans\" : { \n      \"id\" : \"2052465\", \n      \"name\" : \"_cluster_kickstarter_plans\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"germanHighway\" : { \n      \"id\" : \"784290161\", \n      \"name\" : \"germanHighway\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    }, \n    \"has_bought\" : { \n      \"id\" : \"701124977\", \n      \"name\" : \"has_bought\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 3 \n    } \n  }, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "readsAllCollections"
                }
            ],
            "path": "/_api/collection"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "The result is an object describing the collection with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>status</em>: The status of the collection as number. </ul>  - 1: new born collection  - 2: unloaded  - 3: loaded  - 4: in the process of being unloaded  - 5: deleted <br><br> Every other status indicates a corrupted collection. <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: The type of the collection as number. - 2: document collection (normal case) - 3: edges collection",
                    "summary": "returns information about a collection",
                    "httpMethod": "GET",
                    "examples": "",
                    "nickname": "returnsInformationAboutACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Using an identifier: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result will always contain the <em>waitForSync</em>, <em>doCompact</em>, <em>journalSize</em>, and <em>isVolatile</em> attributes. This is achieved by forcing a load of the underlying collection. <br><br>  <ul class=\"swagger-list\"><li><em>waitForSync</em>: If <em>true</em> then creating or changing a document will wait until the data has been synchronised to disk.  <li><em>doCompact</em>: Whether or not the collection will be compacted.  <li><em>journalSize</em>: The maximal size setting for journals / datafiles.  <li><em>isVolatile</em>: If <em>true</em> then the collection data will be kept in memory only and ArangoDB will not write or sync the data to disk.  </ul> In a cluster setup, the result will also contain the following attributes:  <ul class=\"swagger-list\"><li><em>numberOfShards</em>: the number of shards of the collection.  <li><em>shardKeys</em>: contains the names of document attributes that are used to  determine the target shard for documents.",
                    "summary": "reads the properties of a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/792220017/properties\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/properties\n\n{ \n  \"id\" : \"792220017\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Using a name: <br><br><br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/properties\n\n{ \n  \"id\" : \"792416625\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "readsThePropertiesOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/properties"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Using an identifier and requesting the number of documents: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result also contains the number of documents. Note that this will always load the collection into memory. <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: The number of documents inside the collection.",
                    "summary": "returns the number of documents in a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/792613233/count\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/count\n\n{ \n  \"id\" : \"792613233\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"count\" : 100, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "returnsTheNumberOfDocumentsInACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/count"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Using an identifier and requesting the figures of the collection: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result also contains the number of documents and additional statistical information about the collection.  Note that this will always load the collection into memory. <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: The number of documents currently present in the collection.  <li><em>figures.alive.count</em>: The number of currently active documents.  <li><em>figures.alive.size</em>: The total size in bytes used by all active documents.  <li><em>figures.dead.count</em>: The number of dead documents. This includes document versions that have been deleted or replaced by a newer version.  <li><em>figures.dead.size</em>: The total size in bytes used by all dead documents.  <li><em>figures.dead.deletion</em>: The total number of deletion markers in the  collection.  <li><em>figures.datafiles.count</em>: The number of current datafiles. <li><em>figures.datafiles.fileSize</em>: The total filesize of all datafiles.  <li><em>figures.journals.count</em>: The number of journal files. <li><em>figures.journals.fileSize</em>: The total filesize of all journal files.  <li><em>figures.compactors.count</em>: The number of compactor files. <li><em>figures.compactors.fileSize</em>: The total filesize of all compactor files.  <li><em>figures.shapefiles.count</em>: The number of shape files. <li><em>figures.shapefiles.fileSize</em>: The total filesize of all shape files.  <li><em>figures.shapes.count</em>: The total number of shapes in the  collection (this includes shapes that are not in use anymore)   <li><em>figures.attributes.count</em>: The total number of attributes in the  collection (this includes attributes that are not in use anymore)   <li><em>figures.attributes.size</em>: The total size used by all attribute names in the collection (this includes attributes that are not in use anymore)   <li><em>figures.indexes.count</em>: The total number of indexes defined for the collection (this includes internal indexes such as the primary index)  <li><em>figures.indexes.size</em>: The total memory allocated by the indexes in bytes  <li><em>journalSize</em>: The maximal size of the journal in bytes.  </ul> Note: the filesizes of collection and index parameter JSON files are not reported. These files should normally have a size of a few bytes each. Please also note that the <em>fileSize</em> values are reported in bytes and reflect the logical file sizes. Some filesystems may use optimisations (e.g. sparse files) so that the actual physical file size is somewhat different. Directories and sub-directories may also require space in the file system, but this space is not reported in the <em>fileSize</em> results. <br><br> That means that the figures reported do not reflect the actual disk usage of the collection with 100% accuracy. The actual disk usage of a collection is normally slightly higher than the sum of the reported  <em>fileSize</em> values. Still the sum of the <em>fileSize</em> values can still be  used as a lower bound approximation of the disk usage. <br><br>",
                    "summary": "returns the stats for a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/812667249/figures\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/figures\n\n{ \n  \"id\" : \"812667249\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"count\" : 0, \n  \"figures\" : { \n    \"alive\" : { \n      \"count\" : 0, \n      \"size\" : 0 \n    }, \n    \"dead\" : { \n      \"count\" : 0, \n      \"size\" : 0, \n      \"deletion\" : 0 \n    }, \n    \"datafiles\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"journals\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"compactors\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"shapefiles\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"shapes\" : { \n      \"count\" : 0, \n      \"size\" : 0 \n    }, \n    \"attributes\" : { \n      \"count\" : 0, \n      \"size\" : 0 \n    }, \n    \"indexes\" : { \n      \"count\" : 1, \n      \"size\" : 2008 \n    }, \n    \"lastTick\" : \"0\", \n    \"uncollectedLogfileEntries\" : 0 \n  }, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "returnsTheStatsForACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/figures"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Retrieving the revision of a collection <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result will also contain the collection's revision id. The revision id is a server-generated string that clients can use to check whether data in a collection has changed since the last revision check. <br><br>  <ul class=\"swagger-list\"><li><em>revision</em>: The collection revision id as a string.",
                    "summary": "return a collection revision id",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/812994929/revision\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"812994929\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"revision\" : \"0\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "returnACollectionRevisionId"
                }
            ],
            "path": "/_api/collection/{collection-name}/revision"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Retrieving the checksum of a collection: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": "false",
                            "name": "withRevisions",
                            "description": "Whether or not to include document revision ids in the checksum calculation. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": "false",
                            "name": "withData",
                            "description": "Whether or not to include document body data in the checksum calculation. <br><br>"
                        }
                    ],
                    "notes": "Will calculate a checksum of the meta-data (keys and optionally revision ids) and  optionally the document data in the collection. <br><br> The checksum can be used to compare if two collections on different ArangoDB instances contain the same contents. The current revision of the collection is  returned too so one can make sure the checksums are calculated for the same  state of data. <br><br> By default, the checksum will only be calculated on the <em>_key</em> system attribute of the documents contained in the collection. For edge collections, the system  attributes <em>_from</em> and <em>_to</em> will also be included in the calculation. <br><br> By setting the optional URL parameter <em>withRevisions</em> to <em>true</em>, then revision ids (<em>_rev</em> system attributes) are included in the checksumming. <br><br> By providing the optional URL parameter <em>withData</em> with a value of <em>true</em>,  the user-defined document attributes will be included in the calculation too.  Note that including user-defined attributes will make the checksumming slower. <br><br> The response is a JSON object with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>checksum</em>: The calculated checksum as a number.  <li><em>revision</em>: The collection revision id as a string.  </ul> Note: this method is not available in a cluster. <br><br>",
                    "summary": "returns a checksum for the collection",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/813257073/checksum\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"813257073\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"checksum\" : 627490898, \n  \"revision\" : \"813584753\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Retrieving the checksum of a collection including the collection data, but not the revisions: <br><br><br><br><pre><code class=\"json\">shell> curl --data-binary @- --dump - http://localhost:8529/_api/collection/813846897/checksum?withRevisions=false&withData=true\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"813846897\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"checksum\" : 2230195624, \n  \"revision\" : \"814174577\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "returnsAChecksumForTheCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/checksum"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Loads a collection into memory. Returns the collection on success. <br><br> The request might optionally contain the following attribute: <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: If set, this controls whether the return value should include the number of documents in the collection. Setting <em>count</em> to  <em>false</em> may speed up loading a collection. The default value for  <em>count</em> is <em>true</em>.  </ul> On success an object with the following attributes is returned: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>count</em>: The number of documents inside the collection. This is only returned if the <em>count</em> input parameters is set to <em>true</em> or has not been specified.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection",
                    "summary": "loads a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --dump - http://localhost:8529/_api/collection/814436721/load\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"814436721\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"count\" : 0, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "loadsACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/load"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "Removes a collection from memory. This call does not delete any documents. You can use the collection afterwards; in which case it will be loaded into memory, again. On success an object with the following attributes is returned: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection",
                    "summary": "unloads a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --dump - http://localhost:8529/_api/collection/814698865/unload\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"814698865\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 2, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "unloadsACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/unload"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Removes all documents from the collection, but leaves the indexes intact. <br><br> *Examples* <br><br>",
                    "summary": "truncates a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --dump - http://localhost:8529/_api/collection/814895473/truncate\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"814895473\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "truncatesACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/truncate"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Changes the properties of a collection. Expects an object with the attribute(s) <br><br>  <ul class=\"swagger-list\"><li><em>waitForSync</em>: If <em>true</em> then creating or changing a document will wait until the data has been synchronised to disk.  <li><em>journalSize</em>: Size (in bytes) for new journal files that are created for the collection.  </ul> If returns an object with the attributes <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>waitForSync</em>: The new value.  <li><em>journalSize</em>: The new value.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  </ul> Note: some other collection properties, such as <em>type</em>, <em>isVolatile</em>, <em>numberOfShards</em> or <em>shardKeys</em> cannot be changed once a collection is  created. <br><br> *Examples* <br><br>",
                    "summary": "changes the properties of a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/815288689/properties\n{ \n  \"waitForSync\" : true \n}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"815288689\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "changesThePropertiesOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/properties"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection to rename. <br><br>"
                        }
                    ],
                    "notes": "Renames a collection. Expects an object with the attribute(s) <br><br>  <ul class=\"swagger-list\"><li><em>name</em>: The new name.  </ul> If returns an object with the attributes <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The new name of the collection.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  </ul> *Examples* <br><br>",
                    "summary": "renames a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/815550833/rename\n{ \n  \"name\" : \"newname\" \n}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"815550833\", \n  \"name\" : \"newname\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "renamesACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/rename"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the collection currently has no journal, <em>HTTP 500</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Rotating a journal: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Rotates the journal of a collection. The current journal of the collection will be closed  and made a read-only datafile. The purpose of the rotate method is to make the data in the file available for compaction (compaction is only performed for read-only datafiles, and not for journals). <br><br> Saving new data in the collection subsequently will create a new journal file  automatically if there is no current journal. <br><br> If returns an object with the attributes <br><br>  <ul class=\"swagger-list\"><li><em>result</em>: will be <em>true</em> if rotation succeeded  </ul> Note: this method is not available in a cluster. <br><br>",
                    "summary": "rotates the journal of a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/815812977/rotate\n{ \n}\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"result\" : true, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Rotating without a journal: <br><br><br><br><pre><code class=\"json\">shell> curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/817123697/rotate\n{ \n}\n\nHTTP/1.1 400 Bad Request\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"error\" : true, \n  \"code\" : 400, \n  \"errorNum\" : 1105, \n  \"errorMessage\" : \"could not rotate journal: no journal\" \n}\n</code></pre><br>",
                    "nickname": "rotatesTheJournalOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/rotate"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br> *Examples* <br><br> Using an identifier: <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": "true",
                            "name": "collection-name",
                            "description": "The name of the collection to delete. <br><br>"
                        }
                    ],
                    "notes": "Deletes a collection identified by <em>collection-name</em>. <br><br> If the collection was successfully deleted then, an object is returned with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>error</em>: <em>false</em>  <li><em>id</em>: The identifier of the deleted collection.",
                    "summary": "deletes a collection",
                    "httpMethod": "DELETE",
                    "examples": "<br><br><pre><code class=\"json\">shell> curl -X DELETE --data-binary @- --dump - http://localhost:8529/_api/collection/817320305\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"817320305\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Using a name: <br><br><br><br><pre><code class=\"json\">shell> curl -X DELETE --data-binary @- --dump - http://localhost:8529/_api/collection/products1\nundefined\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"817516913\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br>",
                    "nickname": "deletesACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}"
        }
    ]
}
