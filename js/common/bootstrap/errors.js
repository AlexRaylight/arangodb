////////////////////////////////////////////////////////////////////////////////
/// @brief auto-generated file generated from errors.dat
////////////////////////////////////////////////////////////////////////////////

var internal = require("internal");

ModuleCache["/internal"].exports.errors = {
  "ERROR_NO_ERROR"               : { "code" : 0, "message" : "no error" }, 
  "ERROR_FAILED"                 : { "code" : 1, "message" : "failed" }, 
  "ERROR_SYS_ERROR"              : { "code" : 2, "message" : "system error" }, 
  "ERROR_OUT_OF_MEMORY"          : { "code" : 3, "message" : "out of memory" }, 
  "ERROR_INTERNAL"               : { "code" : 4, "message" : "internal error" }, 
  "ERROR_ILLEGAL_NUMBER"         : { "code" : 5, "message" : "illegal number" }, 
  "ERROR_NUMERIC_OVERFLOW"       : { "code" : 6, "message" : "numeric overflow" }, 
  "ERROR_ILLEGAL_OPTION"         : { "code" : 7, "message" : "illegal option" }, 
  "ERROR_DEAD_PID"               : { "code" : 8, "message" : "dead process identifier" }, 
  "ERROR_OPEN_ERROR"             : { "code" : 9, "message" : "open/create file failed" }, 
  "ERROR_WRITE_ERROR"            : { "code" : 10, "message" : "write failed" }, 
  "ERROR_LOCK_ERROR"             : { "code" : 11, "message" : "lock failed" }, 
  "ERROR_UNLOCKED_FILE"          : { "code" : 12, "message" : "unlock failed" }, 
  "VOC_ERROR_ILLEGAL_STATE"      : { "code" : 1000, "message" : "illegal state" }, 
  "VOC_ERROR_SHAPER_FAILED"      : { "code" : 1001, "message" : "illegal shaper" }, 
  "VOC_ERROR_CORRUPTED_DATAFILE" : { "code" : 1002, "message" : "corrupted datafile" }, 
  "VOC_ERROR_MMAP_FAILED"        : { "code" : 1003, "message" : "mmap failed" }, 
  "VOC_ERROR_MSYNC_FAILED"       : { "code" : 1004, "message" : "msync failed" }, 
  "VOC_ERROR_NO_JOURNAL"         : { "code" : 1005, "message" : "no journal" }, 
  "VOC_ERROR_DATAFILE_SEALED"    : { "code" : 1006, "message" : "datafile sealed" }, 
  "VOC_ERROR_CORRUPTED_COLLECTION" : { "code" : 1007, "message" : "corrupted collection" }, 
  "VOC_ERROR_UNKNOWN_TYPE"       : { "code" : 1008, "message" : "unknown type" }, 
  "VOC_ERROR_ILLEGAL_PARAMETER"  : { "code" : 1009, "message" : "illegal parameter" }, 
  "VOC_ERROR_INDEX_EXISTS"       : { "code" : 1010, "message" : "index exists" }, 
  "VOC_ERROR_CONFLICT"           : { "code" : 1011, "message" : "conflict" }, 
  "VOC_ERROR_WRONG_PATH"         : { "code" : 1100, "message" : "wrong path" }, 
  "VOC_ERROR_CANNOT_RENAME"      : { "code" : 1101, "message" : "cannot rename" }, 
  "VOC_ERROR_WRITE_FAILED"       : { "code" : 1102, "message" : "write failed" }, 
  "VOC_ERROR_READ_ONLY"          : { "code" : 1103, "message" : "ready only" }, 
  "VOC_ERROR_DATAFILE_FULL"      : { "code" : 1104, "message" : "datafile full" }, 
  "VOC_ERROR_FILESYSTEM_FULL"    : { "code" : 1105, "message" : "filesystem full" }, 
  "VOC_ERROR_READ_FAILED"        : { "code" : 1106, "message" : "read failed" }, 
  "VOC_ERROR_FILE_NOT_FOUND"     : { "code" : 1107, "message" : "file not found" }, 
  "VOC_ERROR_FILE_NOT_ACCESSIBLE" : { "code" : 1108, "message" : "file not accessible" }, 
  "VOC_ERROR_DOCUMENT_NOT_FOUND" : { "code" : 1200, "message" : "document not found" }, 
  "VOC_ERROR_COLLECTION_NOT_FOUND" : { "code" : 1201, "message" : "collection not found" }, 
  "VOC_ERROR_COLLECTION_PARAMETER_MISSING" : { "code" : 1202, "message" : "parameter collection not found" }, 
  "VOC_ERROR_DOCUMENT_ALTERED"   : { "code" : 1203, "message" : "document altered" }, 
  "VOC_ERROR_DOCUMENT_HANDLE_BAD" : { "code" : 1204, "message" : "illegal document handle" }, 
  "VOC_ERROR_COLLECTION_EXISTS"  : { "code" : 1205, "message" : "collection already exists" }, 
  "ERROR_QUERY_OOM"              : { "code" : 1500, "message" : "out of memory" }, 
  "ERROR_QUERY_KILLED"           : { "code" : 1501, "message" : "query killed" }, 
  "ERROR_QUERY_PARSE"            : { "code" : 1510, "message" : "parse error: %s" }, 
  "ERROR_QUERY_EMPTY"            : { "code" : 1511, "message" : "query is empty" }, 
  "ERROR_QUERY_SPECIFICATION_INVALID" : { "code" : 1512, "message" : "query specification invalid" }, 
  "ERROR_QUERY_NUMBER_OUT_OF_RANGE" : { "code" : 1520, "message" : "number '%s' is out of range" }, 
  "ERROR_QUERY_LIMIT_VALUE_OUT_OF_RANGE" : { "code" : 1521, "message" : "limit value '%s' is out of range" }, 
  "ERROR_QUERY_TOO_MANY_JOINS"   : { "code" : 1540, "message" : "too many joins." }, 
  "ERROR_QUERY_COLLECTION_NAME_INVALID" : { "code" : 1550, "message" : "collection name '%s' is invalid" }, 
  "ERROR_QUERY_COLLECTION_ALIAS_INVALID" : { "code" : 1551, "message" : "collection alias '%s' is invalid" }, 
  "ERROR_QUERY_COLLECTION_ALIAS_REDECLARED" : { "code" : 1552, "message" : "collection alias '%s' is declared multiple times in the same query" }, 
  "ERROR_QUERY_COLLECTION_ALIAS_UNDECLARED" : { "code" : 1553, "message" : "collection alias '%s' is used but was not declared in the from clause" }, 
  "ERROR_QUERY_COLLECTION_NOT_FOUND" : { "code" : 1560, "message" : "unable to open collection '%s'" }, 
  "ERROR_QUERY_GEO_RESTRICTION_INVALID" : { "code" : 1570, "message" : "geo restriction for alias '%s' is invalid" }, 
  "ERROR_QUERY_GEO_INDEX_MISSING" : { "code" : 1571, "message" : "no suitable geo index found for geo restriction on '%s'" }, 
  "ERROR_QUERY_BIND_PARAMETER_MISSING" : { "code" : 1590, "message" : "no value specified for declared bind parameter '%s'" }, 
  "ERROR_QUERY_BIND_PARAMETER_REDECLARED" : { "code" : 1591, "message" : "value for bind parameter '%s' is declared multiple times" }, 
  "ERROR_QUERY_BIND_PARAMETER_UNDECLARED" : { "code" : 1592, "message" : "bind parameter '%s' was not declared in the query" }, 
  "ERROR_QUERY_BIND_PARAMETER_VALUE_INVALID" : { "code" : 1593, "message" : "invalid value for bind parameter '%s'" }, 
  "ERROR_QUERY_BIND_PARAMETER_NUMBER_OUT_OF_RANGE" : { "code" : 1594, "message" : "bind parameter number '%s' out of range" }, 
  "ERROR_CURSOR_NOT_FOUND"       : { "code" : 1600, "message" : "cursor not found" }, 
  "ERROR_SESSION_USERHANDLER_URL_INVALID" : { "code" : 1700, "message" : "expecting <prefix>/user/<username>" }, 
  "ERROR_SESSION_USERHANDLER_CANNOT_CREATE_USER" : { "code" : 1701, "message" : "cannot create user" }, 
  "ERROR_SESSION_USERHANDLER_ROLE_NOT_FOUND" : { "code" : 1702, "message" : "role not found" }, 
  "ERROR_SESSION_USERHANDLER_NO_CREATE_PERMISSION" : { "code" : 1703, "message" : "no permission to create user with that role" }, 
  "ERROR_SESSION_USERHANDLER_USER_NOT_FOUND" : { "code" : 1704, "message" : "user not found" }, 
  "ERROR_SESSION_USERHANDLER_CANNOT_CHANGE_PW" : { "code" : 1705, "message" : "cannot manage password for user" }, 
  "ERROR_SESSION_SESSIONHANDLER_URL_INVALID1" : { "code" : 1706, "message" : "expecting POST <prefix>/session" }, 
  "ERROR_SESSION_SESSIONHANDLER_URL_INVALID2" : { "code" : 1707, "message" : "expecting GET <prefix>/session/<sid>" }, 
  "ERROR_SESSION_SESSIONHANDLER_URL_INVALID3" : { "code" : 1708, "message" : "expecting PUT <prefix>/session/<sid>/<method>" }, 
  "ERROR_SESSION_SESSIONHANDLER_URL_INVALID4" : { "code" : 1709, "message" : "expecting DELETE <prefix>/session/<sid>" }, 
  "ERROR_SESSION_SESSIONHANDLER_SESSION_UNKNOWN" : { "code" : 1710, "message" : "unknown session" }, 
  "ERROR_SESSION_SESSIONHANDLER_SESSION_NOT_BOUND" : { "code" : 1711, "message" : "session has not bound to user" }, 
  "ERROR_SESSION_SESSIONHANDLER_CANNOT_LOGIN" : { "code" : 1712, "message" : "cannot login with session" }, 
  "ERROR_SESSION_USERSHANDLER_INVALID_URL" : { "code" : 1713, "message" : "expecting GET <prefix>/users" }, 
  "ERROR_SESSION_DIRECTORYSERVER_INVALID_URL" : { "code" : 1714, "message" : "expecting /directory/sessionvoc/<token>" }, 
  "ERROR_SESSION_DIRECTORYSERVER_NOT_CONFIGURED" : { "code" : 1715, "message" : "directory server is not configured" }, 
  "SIMPLE_CLIENT_UNKNOWN_ERROR"  : { "code" : 2000, "message" : "unknown client error" }, 
  "SIMPLE_CLIENT_COULD_NOT_CONNECT" : { "code" : 2001, "message" : "could not connect to server" }, 
  "SIMPLE_CLIENT_COULD_NOT_WRITE" : { "code" : 2002, "message" : "could not write to server" }, 
  "SIMPLE_CLIENT_COULD_NOT_READ" : { "code" : 2003, "message" : "could not read from server" }, 
  "ERROR_PROTOCOL_UNSUPPORTED_METHOD" : { "code" : 3000, "message" : "method not supported" }, 
};

