////////////////////////////////////////////////////////////////////////////////
/// @brief JavaScript server functions
///
/// @file
///
/// DISCLAIMER
///
/// Copyright 2010-2011 triagens GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is triAGENS GmbH, Cologne, Germany
///
/// @author Dr. Frank Celler
/// @author Copyright 2011, triAGENS GmbH, Cologne, Germany
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                             Array
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief JSON representation of an array
////////////////////////////////////////////////////////////////////////////////

Array.prototype.print = function() {
  if (this.length == 0) {
    output("[ ]");
  }
  else {
    var sep = " ";

    output("[");

    for (var i = 0;  i < this.length;  i++) {
      output(sep);
      print(this[i]);
      sep = ", ";
    }

    output(" ]");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                          Function
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief JSON representation of a function
////////////////////////////////////////////////////////////////////////////////

Function.prototype.print = function() {
  output(this.toString());
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                            Object
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief string representation of an object
////////////////////////////////////////////////////////////////////////////////

Object.prototype.print = function() {
  var sep = " ";

  output("{");

  for (var k in this) {
    if (this.hasOwnProperty(k)) {
      var val = this[k];

      output(sep, k, " : ");
      print(val);
      sep = ", ";
    }
  }

  output(" }");
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                 AvocadoCollection
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief prints a collection
////////////////////////////////////////////////////////////////////////////////

AvocadoCollection.prototype.print = function() {
  if (this instanceof AvocadoCollection) {
    status = this.status();

    if (status == 1) {
      output("[new born collection ", toJson(this._name), "]");
    }
    else if (status == 2) {
      output("[unloaded collection ", toJson(this._name), "]");
    }
    else if (status == 3) {
      output("[collection ", toJson(this._name), "]");
    }
    else {
      output("[corrupted collection ", toJson(this._name), "]");
    }
  }
  else {
    output(this.toString(), "\n");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @brief string representation of a collection
////////////////////////////////////////////////////////////////////////////////

AvocadoCollection.prototype.toString = function() {
  var status;

  if (this instanceof AvocadoCollection) {
    status = this.status();

    if (status == 1) {
      return "[new born collection at " + toJson(this._name) + "]";
    }
    else if (status == 2) {
      return "[unloaded collection at " + toJson(this._name) + "]";
    }
    else if (status == 3) {
      return "[collection at " + toJson(this._name) + "]";
    }
    else {
      return "[corrupted collection at " + toJson(this._name) + "]";
    }
  }
  else {
    return "[object]";
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                   AvocadoDatabase
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief prints the vocbase
////////////////////////////////////////////////////////////////////////////////

AvocadoDatabase.prototype.print = function() {
  if (this instanceof AvocadoDatabase) {
    output("[vocbase at ", toJson(this._path), "]");
  }
  else {
    output(this.toString(), "\n");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @brief string representation of a vocbase
////////////////////////////////////////////////////////////////////////////////

AvocadoDatabase.prototype.toString = function() {
  if (this instanceof AvocadoDatabase) {
    return "[vocbase at " + toJson(this._path) + "]";
  }
  else {
    return "[object]";
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                      AvocadoEdges
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief prints the edges base
////////////////////////////////////////////////////////////////////////////////

AvocadoEdges.prototype.print = function() {
  if (this instanceof AvocadoEdges) {
    output("[edges at ", toJson(this._path), "]");
  }
  else {
    output(this.toString(), "\n");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @brief string representation of a vocbase
////////////////////////////////////////////////////////////////////////////////

AvocadoEdges.prototype.toString = function() {
  if (this instanceof AvocadoEdges) {
    return "[edges at " + toJson(this._path) + "]";
  }
  else {
    return "[object]";
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                            AvocadoEdgesCollection
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief prints an edges collection
////////////////////////////////////////////////////////////////////////////////

AvocadoEdgesCollection.prototype.print = function() {
  if (this instanceof AvocadoEdgesCollection) {
    output("[edges collection ", toJson(this._name), "]");
  }
  else {
    output(this.toString(), "\n");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                      AvocadoQuery
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup V8Shell V8 Shell
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief global variable holding the current printed query
////////////////////////////////////////////////////////////////////////////////

var it = undefined;

////////////////////////////////////////////////////////////////////////////////
/// @brief number of results to print
////////////////////////////////////////////////////////////////////////////////

var queryLimit = 20;

////////////////////////////////////////////////////////////////////////////////
/// @brief prints a query
////////////////////////////////////////////////////////////////////////////////

AvocadoQuery.prototype.print = function() {
  if (this instanceof AvocadoQuery) {
    var count = 0;

    try {
      while (this.hasNext() && count++ < queryLimit) {
        print(this.next());
        output("\n");
      }

      if (this.hasNext()) {
        output("...more results...");
      }

      it = this;
    }
    catch (e) {
      output("encountered error while printing: " + e);
    }
  }
  else {
    output(this.toString(), "\n");
  }
}

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// Local Variables:
// mode: outline-minor
// outline-regexp: "^\\(/// @brief\\|/// @addtogroup\\|// --SECTION--\\)"
// End:
